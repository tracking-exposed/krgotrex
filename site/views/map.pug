block map
  #map
  script.
    /**
    * Leaflet Mapbox
    */
    mapboxgl.accessToken = 'pk.eyJ1IjoiZ3Jvc2NoZW5yb21hbiIsImEiOiJjampuYjZvMDUxOHRpM3FvMWZ6cTRreGVjIn0.EpyQov5DhmqQmrskmic2uQ';

    // Create map
    const center = [13.429, 52.494]; // Umspannwerk Kreuzberg
    let map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/dark-v9',
        zoom: 16,
        center,
        scrollZoom: false,
        NavigationControl: false
    });
    // Add zoom and rotation controls to the map.
    map.addControl(new mapboxgl.NavigationControl(), 'top-left');
    map.scrollZoom.disable();

    // Create markers and geodata
    const siteData = !{JSON.stringify(sites)};
    const features = siteData.map(site => {
      return {
        "type": "Feature",
        "properties": {
          "title": site.name,
          "description": `
            <a href="${site.href}" title="${site.name}" target="_blank">
              <h3>${site.name}</h3>
            </a>
            <p>${site.address ||Â ''}</p>
          `
        },
        "geometry": {
          "type": "Point",
          "coordinates": [ site.longitude, site.latitude]
        }
      }
    });
    const geojson = {
      "type": "FeatureCollection",
      "features": features
    };

    // Assemble map and add layer with markers
    map.on('load', () => {
      map.addLayer({
        "id": "markers",
        "type": "symbol",
        "source": {
          "type": "geojson",
          "data": geojson
        }
      });

      // Add Markers with Popups to map
      // @link https://www.mapbox.com/help/custom-markers-gl-js/#attach-popups-to-markers
      geojson.features.forEach((feature) => {
        new mapboxgl.Marker({
          color: "#1779ba" // primary color from Foundation settings
        })
          .setLngLat(feature.geometry.coordinates)
          .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
            .setHTML(feature.properties.description)
          )
          .addTo(map);
      });
    }); // /on.load()
