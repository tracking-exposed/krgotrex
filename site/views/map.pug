section.component#component-map
  #map.map
  script.
    /**
    * Leaflet Map
    */
    // Create markers and geodata
    const mapCenter = [13.429, 52.494]; // Umspannwerk Kreuzberg
    const siteData = !{JSON.stringify(sites)};
    const results = !{JSON.stringify(results)};
    const features = siteData.map(site => {
      const isInfiltrated = results.find((result) => {
        return result.id === site.lastResultId && Object.keys(result.googles).length > 0;
      });

      return {
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": [ Number(site.longitude), Number(site.latitude) ]
        },
        "properties": {
          "title": site.name,
          "description": site.address,
          "icon": new ol.style.Icon({
            anchor: [0.5, 1],
            src: isInfiltrated ? '/assets/img/radioactive-pin.svg' : '/assets/img/fist-pin.svg',
            scale: 0.75
          })
        }
      }
    });

    let styles = {};
    const styleFunction = function(feature) {
      styles = {
        "Point": new ol.style.Style({
          "image": feature.get('icon')
        })
      }
      return styles[feature.getGeometry().getType()];
    };

    const geojsonObject = {
      "type": "FeatureCollection",
      "features": features
    };

    const vectorSource = new ol.source.Vector({
      features: (new ol.format.GeoJSON()).readFeatures(geojsonObject, {
        featureProjection: "EPSG:3857"
      })
    });


    //- vectorSource.addFeature(new ol.Feature(new ol.style.Circle([5e6, 7e6], 1e6)));

    const vectorLayer = new ol.layer.Vector({
      source: vectorSource,
      style: styleFunction
    });

    const map = new ol.Map({
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM()
        }),
        vectorLayer
      ],
      target: "map",
      view: new ol.View({
        center: ol.proj.fromLonLat(mapCenter),
        zoom: 17,
      })
    });

    /**
     * Hack to force rendering of map tiles
     */
    const waitForMap = setInterval(function() {
      if ($('.ol-viewport').length) {
          window.dispatchEvent(new Event('resize'));
          clearInterval(waitForMap);
      }
    }, 100);
